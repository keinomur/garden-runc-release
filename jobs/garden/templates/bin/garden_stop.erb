#!/usr/bin/env bash
set -e

# shellcheck disable=SC1091
source /var/vcap/jobs/garden/bin/envs
source /var/vcap/jobs/garden/bin/containerd_utils

<% if !p("bpm.enabled") %>
  exec 1>> "${LOG_DIR}/garden_ctl.stdout.log"
  exec 2>> "${LOG_DIR}/garden_ctl.stderr.log"
<% end %>

function wait_pid() {
  pid=$1
  shift
  max_checks=$1
  shift

  checks=$max_checks
  while [ -e "/proc/$pid" ]; do
    checks=$((checks - 1))
    if [ $checks -le 0 ]; then
      return 1
    fi
    sleep 0.1
  done

  return 0
}

function stop_guardian() {
  local pid
  pid=$(cat "$PIDFILE")

  echo "stopping guardian"
  kill -TERM "$pid"
  if wait_pid "$pid" 100 ; then
    rm "$PIDFILE"
    echo "stopped guardian"
    return 0
  fi

  echo "unable to stop guardian process using SIGTERM after 10 seconds, will now attempt to SIGQUIT"
  kill -QUIT "$pid" || true
  if wait_pid "$pid" 50 ; then
    rm "$PIDFILE"
    echo "stopped guardian"
    return 0
  fi

  echo "unable to stop guardian process using SIGQUIT after 5 seconds, will now attempt to SIGKILL"
  kill -KILL "$pid" || true
  if wait_pid "$pid" 50 ; then
    rm "$PIDFILE"
    echo "stopped guardian"
    return 0
  fi

  echo "unable to stop guardian process using SIGKILL after 5 seconds"
  return 1
}

stop_guardian

<% if p("garden.experimental_containerd_mode") || p("garden.containerd_mode") -%>
log "containerd stopping"
stop_containerd
log "containerd stopped"
<% end %>
